"use strict";var D=Object.create;var m=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var T=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),$=(e,r)=>{for(var t in r)m(e,t,{get:r[t],enumerable:!0})},u=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of F(r))!M.call(e,o)&&o!==t&&m(e,o,{get:()=>r[o],enumerable:!(s=k(r,o))||s.enumerable});return e};var d=(e,r,t)=>(t=e!=null?D(b(e)):{},u(r||!e||!e.__esModule?m(t,"default",{value:e,enumerable:!0}):t,e)),C=e=>u(m({},"__esModule",{value:!0}),e);var P=T((H,w)=>{"use strict";var O=require("os"),x=O.homedir();w.exports=e=>{if(typeof e!="string")throw new TypeError(`Expected a string, got ${typeof e}`);return x?e.replace(/^~(?=$|\/|\\)/,x):e}});var j={};$(j,{default:()=>U});module.exports=C(j);var c=require("@raycast/api");async function y(e,r,t,s){let o=await(0,c.showToast)({style:c.Toast.Style.Animated,title:e});try{let a=await s();return o.style=c.Toast.Style.Success,o.title=r,{isSuccess:!0,result:a,toast:o}}catch(a){return console.error(a),o.style=c.Toast.Style.Failure,o.title=t,o.message=`${a}`,{isSuccess:!1,toast:o}}}var g=require("child_process"),h=require("util"),l=(0,h.promisify)(g.exec);function f(e){let r;return Array.isArray(e)?r=e.map(t=>`-e '${t}'`).join(" "):r=`-e '${e}'`,l(`osascript ${r}`).then(t=>t.stdout)}var i=d(require("fs"));var A=i.default.promises.readdir,K=i.default.promises.mkdir,W=i.default.promises.rm,_=i.default.promises.readFile,z=i.default.promises.writeFile,B=i.default.promises.rm;var S=d(require("path")),v=d(P()),p=class{static clearDerivedData(){return f(['set dd to (path to home folder as string) & "Library:Developer:Xcode:DerivedData"','tell application "Finder"',"if dd exists then","move dd to trash","end if","end tell"]).then()}static removeDerivedData(r){let t=(0,v.default)("~/Library/Developer/Xcode/DerivedData");return A(t).then(s=>{let o=s.find(a=>a.split("-").slice(0,-1).join("-")===r);return o?f(`tell application "Finder" to delete POSIX file "${S.default.join(t,o)}"`).then():Promise.resolve()})}static clearSwiftPackageManagerCache(){return l("rm -rf ~/Library/Caches/org.swift.swiftpm/repositories").then()}static deleteUnsupportedSimulators(){return l("xcrun simctl delete unavailable").then()}};var n=require("@raycast/api"),L=n.Alert.ActionStyle,U=async()=>{let e={icon:n.Icon.Trash,title:"Clear Swift Package Manager cache",message:"Are you sure you want to clear the Swift Package Manager cache?",primaryAction:{title:"Clear",style:L.Destructive}};!await(0,n.confirmAlert)(e)||await y("Clearing Swift Package Manager cache","Successfully cleared Swift Package Manager cache","An error occurred while trying to clear the Swift Package Manager cache",p.clearSwiftPackageManagerCache)};0&&(module.exports={});
